<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Identity Provider Configuration</title>
    {{!--
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap"> --}}
    <link rel="stylesheet" href="/technical-styles/oauth2-key-generation.css" />
    <script src="/technical-scripts/oauth2-key-generation.js" defer></script>
    <style>
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .main-content {
            display: flex;
            gap: 20px;
        }

        .left-panel {
            flex: 1;
            padding: 20px;
            background-color: #fff;
            border-radius: 8px;
        }

        .right-panel {
            padding: 20px;

        }

        .section-header h1 {
            font-size: 20px;
            font-weight: 600;
            margin-bottom: 4px;
        }

        .subtitle {
            color: #6b7280;
            font-size: 14px;
            margin-bottom: 16px;
        }

        .dropdown-container {
            margin-bottom: 20px;
        }

        .dropdown {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 16px;
            border: 1px solid #d1d5db;
            border-radius: 6px;
            cursor: pointer;
        }

        .chevron-down,
        .chevron-up {
            color: #6b7280;
        }

        .advanced-config {
            margin-bottom: 20px;
        }

        .advanced-header {
            display: flex;
            align-items: center;
            gap: 8px;
            cursor: pointer;
        }

        .advanced-text {
            color: var(--primary-main-color);
            font-weight: 500;
        }

        .section {
            margin-bottom: 24px;
        }

        .section h2 {
            font-size: 16px;
            font-weight: 500;
            margin-bottom: 12px;
        }

        .checkbox-group {
            display: flex;
            gap: 16px;
        }

        .checkbox-container {
            display: flex;
            align-items: center;
            gap: 8px;
            cursor: pointer;
            font: 14px
        }

        .checkmark {
            width: 18px;
            height: 18px;
            border: 2px solid #d1d5db;
            border-radius: 4px;
            display: inline-block;
            position: relative;
        }

        input[type="checkbox"]:checked+.checkmark {
            background-color: var(--primary-main-color);
            border-color: var(--primary-main-color);
        }

        input[type="checkbox"]:checked+.checkmark::after {
            content: "";
            position: absolute;
            left: 5px;
            top: 2px;
            width: 5px;
            height: 10px;
            border: solid white;
            border-width: 0 2px 2px 0;
            transform: rotate(45deg);
        }

        .toggle-section {
            display: flex;
            justify-content: space-between;
        }

        .toggle-item {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .toggle {
            position: relative;
            display: inline-block;
            width: 40px;
            height: 20px;
        }

        .toggle input {
            opacity: 0;
            width: 0;
            height: 0;
        }

        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #e5e7eb;
            transition: .4s;
        }

        .slider:before {
            position: absolute;
            content: "";
            height: 16px;
            width: 16px;
            left: 2px;
            bottom: 2px;
            background-color: white;
            transition: .4s;
        }

        input:checked+.slider {
            background-color: var(--primary-main-color);
        }

        input:checked+.slider:before {
            transform: translateX(20px);
        }

        .slider.round {
            border-radius: 34px;
        }

        .slider.round:before {
            border-radius: 50%;
        }

        .callback-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .add-default-btn {
            display: flex;
            align-items: center;
            gap: 4px;
            background: none;
            border: none;
            color: #6b7280;
            cursor: pointer;
            font-size: 14px;
        }

        .input-container {
            position: relative;
            margin-bottom: 8px;
        }

        .input-container input {
            width: 100%;
            padding: 10px 16px;
            border: 1px solid #d1d5db;
            border-radius: 6px;
            font-size: 14px;
        }

        .input-container.error input {
            border-color: #F87171;
            background-color: #FEF2F2;
        }

        .input-container.with-label input {
            padding-right: 60px;
        }

        .input-label {
            position: absolute;
            right: 16px;
            top: 50%;
            transform: translateY(-50%);
            color: #6b7280;
            font-size: 14px;
        }

        .error-message {
            display: flex;
            align-items: center;
            gap: 4px;
            color: #F87171;
            font-size: 14px;
        }

        .generate-keys-btn {
            background-color: var(--primary-main-color);
            color: white;
            border: none;
            border-radius: 6px;
            padding: 10px 20px;
            font-weight: 500;
            cursor: pointer;
            transition: background-color 0.2s;
        }

        .generate-keys-btn:hover {
            background-color: var(--primary-main-color);
        }

        .info-box {
            background-color: #F5F7FF;
            border-radius: 8px;
            padding: 16px;
            display: flex;
            gap: 12px;
            margin-bottom: 20px;
        }

        .info-content p {
            font-size: 14px;
            color: #4B5563;
        }

        .info-content strong {
            font-weight: 600;
        }

        .connection-data-box {
            background-color: white;
            border: 1px solid #e5e7eb;
            border-radius: 8px;
            padding: 16px;
        }

        .connection-data-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .connection-data-header h2 {
            font-size: 16px;
            font-weight: 500;
        }

        .idp-dropdown {
            position: relative;
            display: inline-block;
            width: 300px;
        }

        .idp-dropdown select {
            width: 100%;
            padding: 10px;
            font-size: 16px;
            border: 1px solid #ccc;
            border-radius: 4px;
            appearance: none;
            background-color: white;
            cursor: pointer;
        }

        .idp-dropdown::after {
            content: "â–¼";
            position: absolute;
            top: 50%;
            right: 10px;
            transform: translateY(-50%);
            pointer-events: none;
            font-size: 14px;
        }

        .collapsible-container {
            width: 100%;
            max-width: 1000px;
            border-radius: 8px;
            overflow: hidden;
            background-color: white;
        }

        .collapsible-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px;
            cursor: pointer;
            border-bottom: 1px solid #e0e0e0;
        }

        .collapsible-header h2 {
            font-size: 20px;
            font-weight: 600;
            color: #333;
        }

        .chevron {
            width: 24px;
            height: 24px;
            transition: transform 0.3s ease;
        }

        .chevron.up {
            transform: rotate(180deg);
        }

        .collapsible-content {
            padding: 24px;
        }

        .description {
            color: #666;
            font-size: 16px;
            line-height: 1.5;
            margin-bottom: 24px;
        }

        .endpoint-section {
            margin-bottom: 24px;
        }

        .endpoint-label {
            font-size: 14px;
            font-weight: 500;
            color: #333;
            margin-bottom: 12px;
        }

        .endpoint-value-container {
            position: relative;
            background-color: #f7f7f7;
            border-radius: 6px;
            padding: 16px;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .endpoint-value {
            font-size: 12px;
            color: #333;
            word-break: break-all;
            padding-right: 40px;
        }

        .copy-button {
            background: none;
            border: none;
            cursor: pointer;
            padding: 4px;
        }

        .copy-icon {
            width: 20px;
            height: 20px;
        }
    </style>
</head>

<section>
    <div class="container">
        <div class='d-flex gap-3'>
            <button type='button' class='common-btn-primary' onclick='loadKeyGenModal()'>
                Generate OAuth Keys
            </button>
        </div>
    </div>
    <div class="modal custom-modal" id='OauthKeyModal'>
        <div class="modal-dialog modal-xl" role="document">
            <div class="modal-content" style="padding: 20px;">

                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"
                    onclick="closeModal('OauthKeyModal')"></button>
                <div style="margin-bottom: 20px;">
                    <div class="section-header">
                        <h1>Identity Provider</h1>
                        <p class="subtitle">Select an Identity Provider to configure</p>
                    </div>
                    <div class="idp-dropdown">
                        <select id="select-idp-list" name="selectIdpList">
                            {{#each keyManagersMetadata}}
                            {{#if enabled}}
                            <option value="{{name}}" id="{{name}}">{{name}}</option>
                            {{/if}}
                            {{/each}}
                        </select>
                    </div>
                </div>
                <div class="row">
                    {{#each keyManagersMetadata}}
                    {{#if enabled}}
                    {{#let "keys" (conditionalIf ../isProduction productionKeys sandboxKeys)}}

                    <div class="col-md-6 KMConfig" id="KMData_{{../name}}">
                        <form
                            id='applicationKeyGenerateForm-{{../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}'>
                            <div>
                                {{!-- <div class="section-header">
                                    <h1>Identity Provider</h1>
                                    <p class="subtitle">Select an Identity Provider to configure</p>
                                </div>
                                <div class="idp-dropdown">
                                    <select id="select-idp-list" name="selectIdpList">
                                        {{#each keyManagersMetadata}}
                                        {{#if enabled}}
                                        <option value="{{name}}" id="{{name}}">{{name}}</option>
                                        {{/if}}
                                        {{/each}}
                                    </select>
                                </div> --}}
                                {{!-- {{#each keyManagersMetadata}}
                                {{#if enabled}}
                                {{#let "keys" (conditionalIf ../isProduction productionKeys sandboxKeys)}} --}}
                                {{!-- <div id="KMData_{{../name}}" style="display: none;" class="KMConfig"> --}}
                                    <h3 class='h6'> Key and Secret </h3>
                                    <div class="row mb-4">
                                        <div class="col-md-6">
                                            <label
                                                for='consumer-key-{{../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}'
                                                class='form-label'>
                                                Consumer Key
                                                <span class='text-danger'>*</span>
                                            </label>
                                            <input type='text'
                                                id='consumer-key-{{../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}'
                                                class='form-control' name="consumerKey" value='{{keys.consumerKey}}'
                                                readonly />
                                        </div>
                                        <div class="col-md-6">
                                            <label
                                                for='consumer-key-{{../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}'
                                                class='form-label'>
                                                Consumer Secret
                                                <span class='text-danger'>*</span>
                                            </label>
                                            <input type='text'
                                                id='consumer-key-{{../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}'
                                                class='form-control' name="consumerSecret"
                                                value='{{keys.consumerSecret}}' readonly />
                                        </div>
                                    </div>
                                    {{!-- {{#if keys.consumerKey}}
                                    <div class="row mb-4">
                                        <div class="col-md-6">
                                            <label
                                                for='consumer-key-{{../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}'
                                                class='form-label'>
                                                Consumer Key
                                                <span class='text-danger'>*</span>
                                            </label>
                                            <input type='text'
                                                id='consumer-key-{{../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}'
                                                class='form-control' name="consumerKey" value='{{keys.consumerKey}}'
                                                readonly />
                                        </div>
                                        <div class="col-md-6">
                                            <label
                                                for='consumer-key-{{../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}'
                                                class='form-label'>
                                                Consumer Secret
                                                <span class='text-danger'>*</span>
                                            </label>
                                            <input type='text'
                                                id='consumer-key-{{../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}'
                                                class='form-control' name="consumerSecret"
                                                value='{{keys.consumerSecret}}' readonly />
                                        </div>
                                    </div>
                                    {{else}}
                                    <p class="mb-4"> {{#if ../../isProduction}}Production{{else}}Sandbox{{/if}} Key and
                                        Secret is not generated for this
                                        application</p>
                                    {{/if}} --}}
                                    <div class="section">
                                        <h2>Grant Types</h2>
                                        <div class="row">
                                            {{#let "supportedGrantTypes" keys.supportedGrantTypes }}
                                            {{#each ../../availableGrantTypes}}
                                            {{!-- <div class="col-md-4 mb-2">
                                                <div class="form-check">
                                                    <div class="col-md-4 mb-2">
                                                        <div class="form-check">
                                                            <input type="checkbox" class="form-check-input"
                                                                id="grant-type-{{this}}-{{../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}"
                                                                name="grantTypes" value="{{this}}" {{#if (contains
                                                                ../supportedGrantTypes this)}}checked{{/if}} />
                                                            <label class="form-check-label"
                                                                for="grant-type-{{this}}-{{../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}">
                                                                {{this}}
                                                            </label>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div> --}}
                                            <div class="col-md-4 mb-2">
                                                <div class="form-check">
                                                    <div class="checkbox-group" id="grant-types">
                                                        <label class="checkbox-container">
                                                            <input type="checkbox"
                                                                id="grant-type-{{this}}-{{../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}"
                                                                name="grantTypes" value="{{this}}" {{#if (contains
                                                                ../supportedGrantTypes this)}}checked{{/if}} />
                                                            <label class="form-check-label"
                                                                for="grant-type-{{this}}-{{../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}">
                                                                {{this}}
                                                            </label>
                                                        </label>
                                                    </div>
                                                </div>
                                            </div>
                                            {{/each}}
                                            {{/let}}

                                        </div>
                                    </div>

                                    {{!-- <div class="section toggle-section">
                                        <div class="toggle-item">
                                            <span>Enable Public Client</span>
                                            <label class="toggle">
                                                <input type="checkbox">
                                                <span class="slider round"></span>
                                            </label>
                                        </div>
                                        <div class="toggle-item">
                                            <span>Enable PKCE</span>
                                            <label class="toggle">
                                                <input type="checkbox">
                                                <span class="slider round"></span>
                                            </label>
                                        </div>
                                    </div> --}}

                                    <div class="section">
                                        <div class="callback-header">
                                            <h2>Callback URL</h2>
                                        </div>
                                        <div class="input-container">
                                            <input type="text" name="callbackURL" placeholder="Callback URLs">
                                        </div>
                                    </div>

                                    <!-- Additional Configuration Fields -->
                                    {{#let "additionalProperties" (conditionalIf keys.additionalProperties
                                    keys.additionalProperties [])}}
                                    {{#each ../../applicationConfiguration}}
                                    {{#let "propValue" (conditionalIf (getValue ../additionalProperties name)
                                    (getValue
                                    ../additionalProperties name)
                                    default)}}
                                    <div class="mb-3">
                                        {{#if (eq ../type 'checkbox')}}
                                        {{else}}
                                        <label
                                            for="{{../name}}-{{../../../../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}"
                                            class="form-label">
                                            {{../label}}
                                            {{#if required}}<span class="text-danger">*</span>{{/if}}
                                        </label>
                                        {{/if}}

                                        {{#if (eq ../type 'input')}}
                                        <input type="text" name="additionalProperties.{{{../name}}}"
                                            id="{{../name}}-{{../../../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}"
                                            class="form-control" value="{{propValue}}" {{#if
                                            required}}required{{/if}} />
                                        {{/if}}

                                        {{#if (eq ../type 'text')}}
                                        <input type="text" name="additionalProperties.{{../name}}"
                                            id="{{../name}}-{{../../../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}"
                                            class="form-control" value="{{propValue}}" {{#if
                                            required}}required{{/if}} />
                                        {{/if}}

                                        {{#and (eq ../type 'select') (eq ../multiple false)}}
                                        <select
                                            id="{{../name}}-{{../../../../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}"
                                            class="form-control" {{#if required}}required{{/if}}
                                            name="additionalProperties.{{../name}}">
                                            {{#each ../values}}
                                            {{#if (eq this ../propValue)}}cedce {{/if}}
                                            <option value="{{this}}" {{#if (eq ../propValue this)}}selected{{/if}}>
                                                {{this}}
                                            </option>
                                            {{/each}}
                                        </select>
                                        {{/and}}

                                        {{#and (eq ../type 'select') (eq ../multiple true)}}
                                        <select
                                            id="{{../name}}-{{../../../../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}"
                                            class="form-control" name="additionalProperties.{{../name}}" multiple>
                                            {{#each ../values}}
                                            <option {{#in this values=../propValue}}selected{{/in}}>{{this}}
                                            </option>
                                            {{/each}}
                                        </select>
                                        {{/and}}

                                        {{#if (eq ../type 'checkbox')}}
                                        <div class="col-md-4 mb-2">
                                            <div class="form-check">
                                                <div class="section toggle-section">
                                                    <div class="toggle-item">
                                                        <span> {{../label}}</span>
                                                        <label class="toggle">
                                                            <input type="checkbox" value="true" {{#if (eq propValue
                                                                true)}} checked{{/if}}>
                                                            <span class="slider round"></span>
                                                        </label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        {{!-- <div class="col-md-4 mb-2">
                                            <div class="form-check">
                                                <input type="checkbox" name="additionalProperties.{{../name}}"
                                                    id="{{../name}}-{{../../../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}"
                                                    class="form-check-input" value="true" {{#if (eq propValue true)}}
                                                    checked{{/if}} />
                                                <label class="form-check-label"
                                                    for="{{../name}}-{{../../../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}">
                                                    {{../label}}
                                                </label>
                                            </div>
                                        </div> --}}
                                        {{/if}}

                                        <div class='form-text mb-3'>{{tooltip}}</div>
                                    </div>
                                    {{/let}}
                                    {{/each}}
                                    {{/let}}

                                    {{!-- <div class="section">
                                        <h2>User Token Expiry (Minutes)</h2>
                                        <div class="input-container with-label">
                                            <input type="text" value="1440">
                                            <span class="input-label">1 day</span>
                                        </div>
                                    </div>

                                    <div class="section">
                                        <h2>Refresh Token Expiry (Minutes)</h2>
                                        <div class="input-container with-label">
                                            <input type="text" value="10080">
                                            <span class="input-label">7 days</span>
                                        </div>
                                    </div>

                                    <div class="section">
                                        <button class="generate-keys-btn">Generate Keys</button>
                                    </div> --}}

                                    {{!--
                                </div> --}}
                                {{!-- {{/let}}
                                {{/if}}
                                {{/each}} --}}
                            </div>
                        </form>
                        {{#if keys.consumerKey}}
                        <div class="d-flex gap-3">
                            <button class="common-btn-primary" id="applicationKeyUpdateButton" name="http-values"
                                type="button" onClick="updateApplicationKey('applicationKeyGenerateForm-{{../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}', 
                                        '{{json ../../applicationMetadata.appMap}}', {{#if ../../isProduction}}'PRODUCTION'{{else}}'SANDBOX'{{/if}}, '{{../name}}', 
                                        '{{keys.keyMappingId}}', '{{keys.clientName}}')">
                                Update
                            </button>
                        </div>
                        {{else}}
                        <div class="d-flex gap-3">
                            <button class="common-btn-primary" id="applicationKeyGenerateButton" name="http-values"
                                type="button"
                                onClick="generateApplicationKey('applicationKeyGenerateForm-{{../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}', '{{../../applicationMetadata.id}}', {{#if ../../isProduction}}'PRODUCTION'{{else}}'SANDBOX'{{/if}}, '{{../name}}', '{{../../applicationMetadata/name}}', '{{ json ../../subscriptions}}', '{{../../orgID}}')">
                                Generate Keys
                            </button>
                        </div>
                        {{/if}}
                    </div>
                    <div class="col-md-6 KMConfig" id="KMURL_{{../name}}" style="display: none;">
                        <div>
                            <div id="header">
                                <h2>Identity Provider Connection Data</h2>
                            </div>
                            <div id="km-details">
                                <p class="description">
                                    If your application manages authentication, use the following details to enable
                                    authentication and
                                    authorization within your application.
                                </p>
                                {{!-- Token Endpoint --}}
                                <div class='mb-3'>
                                    <label
                                        for='token-endpoint-{{../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}'
                                        class='form-label'>
                                        Token Endpoint
                                        <span class='text-danger'>*</span>
                                    </label>
                                    <input type='url' name="tokenURL"
                                        id='token-endpoint-{{../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}'
                                        class='form-control' value='{{../tokenEndpoint}}' readonly />
                                </div>

                                {{!-- Revoke Endpoint --}}
                                <div class='mb-3'>
                                    <label
                                        for='revoke-endpoint-{{../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}'
                                        class='form-label'>
                                        Revoke Endpoint
                                        <span class='text-danger'>*</span>
                                    </label>
                                    <input type='url' name="revokeURL"
                                        id='revoke-endpoint-{{../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}'
                                        class='form-control' value='{{../revokeEndpoint}}' readonly />
                                </div>
                            </div>

                        </div>
                    </div>
                    {{/let}}
                    {{/if}}
                    {{/each}}
                </div>
            </div>

        </div>
    </div>
    <script>
        const header = document.getElementById('header');
        const content = document.getElementById('km-details');
        const chevron = document.getElementById('idp-chevron');

        const selectElement = document.getElementById("select-idp-list");

        // const advancedhHeader = document.getElementById('config-header');
        // const advancedContent = document.getElementById('KMData_'+ selectElement.value);
        // const chevronAdvanced = document.getElementById('chevron-advanced');

        // Initialize as expanded (matching the image)
        let isCollapsed = false;

        function copyToClipboard(button) {
            const textToCopy = button.parentElement.querySelector('.endpoint-value').textContent;
            navigator.clipboard.writeText(textToCopy)
                .then(() => {
                    // Optional: Show a copied notification
                    const originalSvg = button.innerHTML;
                    button.innerHTML = `
                        <svg class="copy-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <polyline points="20 6 9 17 4 12"></polyline>
                        </svg>
                    `;
                    setTimeout(() => {
                        button.innerHTML = originalSvg;
                    }, 1500);
                })
                .catch(err => {
                    console.error('Failed to copy: ', err);
                });
        }

        function loadKeyGenModal() {
            const modal = document.getElementById('OauthKeyModal');
            modal.style.display = 'flex';
        }
        // Key Manager data stored as a JavaScript object
        const keyManagers = {{{ json keyManagersMetadata }}};

        const infoBox = document.getElementById("km-details");

        function updateKeyManagerInfo() {
            document.querySelectorAll(".KMConfig").forEach((el) => {
                el.style.display = "none";
            });
            const selectedValue = selectElement.value;
            const kmData = document.getElementById("KMData_" + selectedValue);
            const kmURL = document.getElementById("KMURL_" + selectedValue);
            console.log(kmData);
            if (kmData) {
                kmData.style.display = "block";
            }
            if (kmURL) {
                kmURL.style.display = "block";
            }
            const keyManager = keyManagers.find(km => km.name === selectedValue);
        }
        selectElement.addEventListener("change", updateKeyManagerInfo);
        // Initialize with selected value
        updateKeyManagerInfo();
    </script>
</section>