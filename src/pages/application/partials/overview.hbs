<head>
  <link rel='stylesheet' href='/technical-styles/overview.css' />
  <script>
    // API Selection Management
    function toggleAllAPISelection(selectAllCheckbox) {
      const checkboxes = document.querySelectorAll('.api-checkbox');
      checkboxes.forEach(checkbox => {
        checkbox.checked = selectAllCheckbox.checked;
      });
      updateSDKButtonVisibility();
    }

    function toggleAPISelection() {
      const checkboxes = document.querySelectorAll('.api-checkbox');
      const selectAllCheckbox = document.getElementById('selectAllAPIs');
      
      // Update "Select All" checkbox state
      const checkedCount = document.querySelectorAll('.api-checkbox:checked').length;
      if (selectAllCheckbox) {
        selectAllCheckbox.checked = checkedCount === checkboxes.length;
        selectAllCheckbox.indeterminate = checkedCount > 0 && checkedCount < checkboxes.length;
      }
      
      updateSDKButtonVisibility();
    }

    function updateSDKButtonVisibility() {
      const checkedCount = document.querySelectorAll('.api-checkbox:checked').length;
      const sdkButton = document.getElementById('generateSDKBtn');
      const tooltip = sdkButton?.parentElement?.querySelector('.tooltip-text');
      
      if (sdkButton) {
        if (checkedCount >= 2) {
          sdkButton.disabled = false;
          sdkButton.classList.remove('disabled');
          if (tooltip) {
            tooltip.textContent = `Generate SDK for ${checkedCount} selected APIs`;
          }
        } else {
          sdkButton.disabled = true;
          sdkButton.classList.add('disabled');
          if (tooltip) {
            tooltip.textContent = 'Select at least 2 APIs to generate SDK';
          }
        }
      }
    }

    function redirectToSDKGeneration() {
      const checkedCheckboxes = document.querySelectorAll('.api-checkbox:checked');
      if (checkedCheckboxes.length < 2) {
        alert('Please select at least 2 APIs to generate SDK');
        return;
      }
      
      // Call the global openSdkDrawer function from the SDK drawer
      if (typeof window.openSdkDrawer === 'function') {
        window.openSdkDrawer();
      }
    }

    // Initialize SDK button state when page loads
    document.addEventListener('DOMContentLoaded', function() {
      updateSDKButtonVisibility();
      
      // Set up event listeners for API checkboxes if they exist
      const apiCheckboxes = document.querySelectorAll('.api-checkbox');
      apiCheckboxes.forEach(checkbox => {
        checkbox.addEventListener('change', toggleAPISelection);
      });
      
      const selectAllCheckbox = document.getElementById('selectAllAPIs');
      if (selectAllCheckbox) {
        selectAllCheckbox.addEventListener('change', function() {
          toggleAllAPISelection(this);
        });
      }
    });
  </script>
</head>

<section class="section mt-0 mb-6">
  <div class="container-fluid">
    {{!-- <div class="app-overview-card d-flex justify-content-between align-items-start">
      <div class="me-5 w-75">
        {{#applicationMetadata}}
        <div class="d-flex align-items-center edit-container mb-2">
          <h3 class="app-overview-title" id="applicationName" data-original="{{name}}">{{name}}</h3>
          <button class="btn btn-sm edit-inline-btn" id="editNameBtn" title="Edit name">
            <i class="bi bi-pencil"></i>
          </button>
          <div class="edit-actions" id="nameEditActions" style="display: none;">
            <button class="btn btn-sm common-btn-primary save-btn" id="saveNameBtn" title="Save">
              <span class="button-normal-state"><i class="bi bi-check"></i></span>
              <span class="button-loading-state" style="display: none;">
                <span class="spinner-border spinner-border-sm" role="status"></span>
              </span>
            </button>
            <button class="btn btn-sm common-btn-outlined cancel-btn" id="cancelNameBtn" title="Cancel"><i
                class="bi bi-x"></i></button>
          </div>
        </div>
        <div id="nameEditError" class="edit-error-message mb-2" style="display: none;"></div>
        <div class="d-flex align-items-center edit-container mb-2">
          {{#if description}}
          <p class="app-description mb-0" id="applicationDescription" data-original="{{description}}">{{description}}
          </p>
          <button class="btn btn-sm edit-inline-btn" id="editDescriptionBtn" title="Edit description">
            <i class="bi bi-pencil"></i>
          </button>
          {{else}}
          <button class="btn btn-sm common-btn-link p-0" id="editDescriptionBtn" title="Add description">
            <i class="bi bi-plus"></i> Add description
          </button>
          <p class="app-description" id="applicationDescription" data-original="{{null}}"></p>
          {{/if}}
          <div class="edit-actions" id="descriptionEditActions" style="display: none;">
            <button class="btn btn-sm common-btn-primary save-btn" id="saveDescriptionBtn" title="Save">
              <span class="button-normal-state"><i class="bi bi-check"></i></span>
              <span class="button-loading-state" style="display: none;">
                <span class="spinner-border spinner-border-sm" role="status"></span>
              </span>
            </button>
            <button class="btn btn-sm common-btn-outlined cancel-btn" id="cancelDescriptionBtn" title="Cancel"><i
                class="bi bi-x"></i></button>
          </div>
        </div>
        <div id="descriptionEditError" class="edit-error-message" style="display: none;"></div>
        <p class="app-subscription-count mt-3">Subscriptions: {{subscriptionCount}}</p>
      </div>
      {{/applicationMetadata}}

      <!-- OAuth2 Keys Section -->
      <div class="oauth2-keys-section">
        <h5 class="oauth2-title mb-2">OAuth2</h5>

        <!-- Generate Key Button (shown initially) -->
        {{#each keyManagersMetadata}}
        {{#in name values="_internal_key_manager_,Resident Key Manager,_appdev_sts_key_manager_"}}
        {{#if enabled}}
        {{#let "keys" (conditionalIf ../isProduction productionKeys sandboxKeys)}}

        <div id="generateKeyContainer" style="{{#if keys.consumerKey}}display: none;{{/if}}">
          <div class="d-flex align-items-center">
            <button id="generateKeyBtn" class="common-btn-primary btn-sm"
              onclick="generateApplicationKey('keysview-{{../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}', '{{../../applicationMetadata.id}}', {{#if ../../isProduction}}'PRODUCTION'{{else}}'SANDBOX'{{/if}}, '{{../name}}', '{{../../applicationMetadata/name}}', '{{ json ../../subAPIs}}', '{{../../orgID}}', 'consumer-key-{{../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}', 'consumer-secret-{{../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}')">
              <span class="button-normal-state">
                <i class="bi bi-key me-1"></i> Generate Key
              </span>
              <span class="button-loading-state" style="display: none;">
                <span class="spinner-border spinner-border-sm me-1" role="status"></span>
                Generating...
              </span>
            </button>
            <div class="tooltip-container ms-2">
              <i class="bi bi-info-circle"></i>
              <span class="tooltip-text">This key is shared among all APIs</span>
            </div>
          </div>
        </div>

        <!-- Action Buttons (hidden initially) -->
        <div id="keyActionsContainer" class="key-actions-container"
          style="{{#unless keys.consumerKey}}display: none;{{/unless}}">
          <div class="key-action-row">
            <span class="key-action-label">Credentials: </span>
            <div class="key-action-buttons">
              <button id="viewKeyBtn" class="common-btn-outlined btn-sm" onclick="loadKeysViewModal()">
                <i class="bi bi-eye"></i> View
              </button>
              <button id="modifyKeyBtn" class="common-btn-outlined btn-sm" onclick="loadKeysModifyModal()">
                <i class="bi bi-pencil-square"></i> Modify
              </button>
            </div>
          </div>
          <div class="key-action-row">
            <span class="key-action-label">Token: </span>
            <div class="key-action-buttons">
              <button id="tokenKeyBtn" class="common-btn-outlined btn-sm" data-app-id="{{@root.applicationMetadata.id}}"
                onclick="generateOauthKey('applicationKeyGenerateForm-{{../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}', '{{keys.appRefID}}', '{{keys.keyMappingId}}', '{{../name}}', '{{../../applicationMetadata/name}}', '{{keys.consumerSecret}}', '{{json @root.subscriptionScopes}}')">
                <span class="button-normal-state">
                  <i class="bi bi-key-fill"></i> Generate
                </span>
                <span class="button-loading-state" style="display: none;">
                  <span class="spinner-border spinner-border-sm me-1" role="status"></span>
                  Generating...
                </span>
              </button>
              <button id="tokenInstructionsBtn" class="common-btn-outlined btn-sm"
                onclick="loadKeysInstructionsModal()">
                <i class="bi bi-info-circle"></i> Instructions
              </button>
            </div>
          </div>
        </div>

        {{/let}}
        {{/if}}
        {{else}}
        {{#let "keys" (conditionalIf ../isProduction productionKeys sandboxKeys)}}
        <div id="generateKeyContainer"
          class="d-flex align-items-center edit-container mb-2 {{#if keys.consumerKey}}d-none{{/if}}"
          style="{{#if keys.consumerKey}}display: none;{{/if}}">
          <div class="d-flex align-items-center">
            <button class="btn btn-sm common-btn-link p-0" id="addClientID" title="Add description">
              <i class="bi bi-plus"></i> Add Client ID
            </button>
            <p class="app-description" id="clientIDInput" data-key-manager="{{name}}"
              data-app-ref-id="{{@root.applicationMetadata}}" style="font-size:13px"></p>

          </div>
          <div class="edit-actions ms-0" id="clientIDEditActions" style="display: none;">
            <button class="btn btn-sm common-btn-primary save-btn" id="generateKeyBtn"
              onclick="generateApplicationKey('keysview-{{../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}', '{{../../applicationMetadata.id}}', {{#if ../../isProduction}}'PRODUCTION'{{else}}'SANDBOX'{{/if}}, '{{../name}}', '{{../../applicationMetadata/name}}', '{{ json ../../subAPIs}}', '{{../../orgID}}', 'consumer-key-{{../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}', 'consumer-secret-{{../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}')"
              title="Save">
              <span class="button-normal-state"><i class="bi bi-check"></i></span>
              <span class="button-loading-state" style="display: none;">
                <span class="spinner-border spinner-border-sm" role="status"></span>
              </span>
            </button>
            <button class="btn btn-sm common-btn-outlined cancel-btn" id="cancelClientIDBtn" title="Cancel"><i
                class="bi bi-x"></i></button>
          </div>
          <div class="tooltip-container ms-2" id="sharedKeyTooltip">
            <i class="bi bi-info-circle"></i>
            <span class="tooltip-text">This key is shared among all APIs</span>
          </div>
        </div>
        <button id="clientIDSaveError" class="edit-error-message" style="display: none;"></button>

        <div id="keyActionsContainer" class="key-actions-container"
          style="{{#unless keys.consumerKey}}display: none;{{/unless}}">
          <div class="key-action-row">
            <span class="key-action-label">Credentials: </span>
            <div class="key-action-buttons">
              <button id="viewKeyBtn" class="common-btn-outlined btn-sm" onclick="loadKeysViewModal()">
                <i class="bi bi-eye"></i> View
              </button>
            </div>
          </div>
          <div class="key-action-row">
            <span class="key-action-label">Token: </span>
            <div class="key-action-buttons">
              <button id="tokenInstructionsBtn" class="common-btn-outlined btn-sm"
                onclick="loadKeysInstructionsModal()">
                <i class="bi bi-info-circle"></i> Instructions
              </button>
            </div>
          </div>
        </div>
        {{/let}}
        {{/in}}
        <!-- Error message container for key generation and token generation -->
        <div id="keyGenerationErrorContainer" class="mt-2 text-danger"
          style="display: none; font-size: 0.75rem; word-wrap: break-word;"></div>
        {{/each}}
      </div>

      <!-- SDK Generation Section -->
      <div class="sdk-generation-section mb-4">
        <h5 class="oauth2-title mb-2">SDK</h5>
        <div class="d-flex align-items-center">
          <button id="generateSDKBtn" class="common-btn-primary btn-sm" 
                  onclick="redirectToSDKGeneration()" disabled>
            <span class="button-normal-state">
              <i class="bi bi-code-slash me-1"></i> Generate SDK
            </span>
          </button>
          <div class="tooltip-container ms-2">
            <i class="bi bi-info-circle"></i>
            <span class="tooltip-text">Select at least 2 APIs to generate SDK</span>
          </div>
        </div>
      </div>
    </div> --}}
    <div class="app-overview-card d-flex justify-content-between align-items-start">
      <div class="me-5 w-75">
        {{#applicationMetadata}}
        <div class="d-flex align-items-center edit-container mb-2">
          <h3 class="app-overview-title" id="applicationName" data-original="{{name}}">{{name}}</h3>
          <button class="btn btn-sm edit-inline-btn" id="editNameBtn" title="Edit name">
            <i class="bi bi-pencil"></i>
          </button>
          <div class="edit-actions" id="nameEditActions" style="display: none;">
            <button class="btn btn-sm common-btn-primary save-btn" id="saveNameBtn" title="Save">
              <span class="button-normal-state"><i class="bi bi-check"></i></span>
              <span class="button-loading-state" style="display: none;">
                <span class="spinner-border spinner-border-sm" role="status"></span>
              </span>
            </button>
            <button class="btn btn-sm common-btn-outlined cancel-btn" id="cancelNameBtn" title="Cancel"><i
                class="bi bi-x"></i></button>
          </div>
        </div>
        <div id="nameEditError" class="edit-error-message mb-2" style="display: none;"></div>
        <div class="d-flex align-items-center edit-container mb-2">
          {{#if description}}
          <p class="app-description mb-0" id="applicationDescription" data-original="{{description}}">{{description}}
          </p>
          <button class="btn btn-sm edit-inline-btn" id="editDescriptionBtn" title="Edit description">
            <i class="bi bi-pencil"></i>
          </button>
          {{else}}
          <button class="btn btn-sm common-btn-link p-0" id="editDescriptionBtn" title="Add description">
            <i class="bi bi-plus"></i> Add description
          </button>
          <p class="app-description" id="applicationDescription" data-original="{{null}}"></p>
          {{/if}}
          <div class="edit-actions" id="descriptionEditActions" style="display: none;">
            <button class="btn btn-sm common-btn-primary save-btn" id="saveDescriptionBtn" title="Save">
              <span class="button-normal-state"><i class="bi bi-check"></i></span>
              <span class="button-loading-state" style="display: none;">
                <span class="spinner-border spinner-border-sm" role="status"></span>
              </span>
            </button>
            <button class="btn btn-sm common-btn-outlined cancel-btn" id="cancelDescriptionBtn" title="Cancel"><i
                class="bi bi-x"></i></button>
          </div>
        </div>
        <div id="descriptionEditError" class="edit-error-message" style="display: none;"></div>
        <p class="app-subscription-count mt-3">Subscriptions: {{subscriptionCount}}</p>
      </div>
      {{/applicationMetadata}}

      <div>
        <div class="oauth2-keys-section">
          <h5 class="oauth2-title mb-2">OAuth2</h5>

          {{#each keyManagersMetadata}}
          {{#in name values="_internal_key_manager_,Resident Key Manager,_appdev_sts_key_manager_"}}
          {{#if enabled}}
          {{#let "keys" (conditionalIf ../isProduction productionKeys sandboxKeys)}}

          <div id="generateKeyContainer" style="{{#if keys.consumerKey}}display: none;{{/if}}">
            <div class="d-flex align-items-center">
              <button id="generateKeyBtn" class="common-btn-primary btn-sm"
                onclick="generateApplicationKey('keysview-{{../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}', '{{../../applicationMetadata.id}}', {{#if ../../isProduction}}'PRODUCTION'{{else}}'SANDBOX'{{/if}}, '{{../name}}', '{{../../applicationMetadata/name}}', '{{ json ../../subAPIs}}', '{{../../orgID}}', 'consumer-key-{{../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}', 'consumer-secret-{{../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}')">
                <span class="button-normal-state">
                  <i class="bi bi-key me-1"></i> Generate Key
                </span>
                <span class="button-loading-state" style="display: none;">
                  <span class="spinner-border spinner-border-sm me-1" role="status"></span>
                  Generating...
                </span>
              </button>
              <div class="tooltip-container ms-2">
                <i class="bi bi-info-circle"></i>
                <span class="tooltip-text">This key is shared among all APIs</span>
              </div>
            </div>
          </div>

          <div id="keyActionsContainer" class="key-actions-container"
            style="{{#unless keys.consumerKey}}display: none;{{/unless}}">
            <div class="key-action-row">
              <span class="key-action-label">Credentials: </span>
              <div class="key-action-buttons">
                <button id="viewKeyBtn" class="common-btn-outlined btn-sm" onclick="loadKeysViewModal()">
                  <i class="bi bi-eye"></i> View
                </button>
                <button id="modifyKeyBtn" class="common-btn-outlined btn-sm" onclick="loadKeysModifyModal()">
                  <i class="bi bi-pencil-square"></i> Modify
                </button>
              </div>
            </div>
            <div class="key-action-row">
              <span class="key-action-label">Token: </span>
              <div class="key-action-buttons">
                <button id="tokenKeyBtn" class="common-btn-outlined btn-sm" data-app-id="{{@root.applicationMetadata.id}}"
                  onclick="generateOauthKey('applicationKeyGenerateForm-{{../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}', '{{keys.appRefID}}', '{{keys.keyMappingId}}', '{{../name}}', '{{../../applicationMetadata/name}}', '{{keys.consumerSecret}}', '{{json @root.subscriptionScopes}}')">
                  <span class="button-normal-state">
                    <i class="bi bi-key-fill"></i> Generate
                  </span>
                  <span class="button-loading-state" style="display: none;">
                    <span class="spinner-border spinner-border-sm me-1" role="status"></span>
                    Generating...
                  </span>
                </button>
                <button id="tokenInstructionsBtn" class="common-btn-outlined btn-sm"
                  onclick="loadKeysInstructionsModal()">
                  <i class="bi bi-info-circle"></i> Instructions
                </button>
              </div>
            </div>
          </div>

          {{/let}}
          {{/if}}
          {{else}}
          {{#let "keys" (conditionalIf ../isProduction productionKeys sandboxKeys)}}
          <div id="generateKeyContainer"
            class="d-flex align-items-center edit-container mb-2 {{#if keys.consumerKey}}d-none{{/if}}"
            style="{{#if keys.consumerKey}}display: none;{{/if}}">
            <div class="d-flex align-items-center">
              <button class="btn btn-sm common-btn-link p-0" id="addClientID" title="Add description">
                <i class="bi bi-plus"></i> Add Client ID
              </button>
              <p class="app-description" id="clientIDInput" data-key-manager="{{name}}"
                data-app-ref-id="{{@root.applicationMetadata}}" style="font-size:13px"></p>

            </div>
            <div class="edit-actions ms-0" id="clientIDEditActions" style="display: none;">
              <button class="btn btn-sm common-btn-primary save-btn" id="generateKeyBtn"
                onclick="generateApplicationKey('keysview-{{../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}', '{{../../applicationMetadata.id}}', {{#if ../../isProduction}}'PRODUCTION'{{else}}'SANDBOX'{{/if}}, '{{../name}}', '{{../../applicationMetadata/name}}', '{{ json ../../subAPIs}}', '{{../../orgID}}', 'consumer-key-{{../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}', 'consumer-secret-{{../id}}-{{#if ../../isProduction}}production{{else}}sandbox{{/if}}')"
                title="Save">
                <span class="button-normal-state"><i class="bi bi-check"></i></span>
                <span class="button-loading-state" style="display: none;">
                  <span class="spinner-border spinner-border-sm" role="status"></span>
                </span>
              </button>
              <button class="btn btn-sm common-btn-outlined cancel-btn" id="cancelClientIDBtn" title="Cancel"><i
                  class="bi bi-x"></i></button>
            </div>
            <div class="tooltip-container ms-2" id="sharedKeyTooltip">
              <i class="bi bi-info-circle"></i>
              <span class="tooltip-text">This key is shared among all APIs</span>
            </div>
          </div>
          <button id="clientIDSaveError" class="edit-error-message" style="display: none;"></button>

          <div id="keyActionsContainer" class="key-actions-container"
            style="{{#unless keys.consumerKey}}display: none;{{/unless}}">
            <div class="key-action-row">
              <span class="key-action-label">Credentials: </span>
              <div class="key-action-buttons">
                <button id="viewKeyBtn" class="common-btn-outlined btn-sm" onclick="loadKeysViewModal()">
                  <i class="bi bi-eye"></i> View
                </button>
              </div>
            </div>
            <div class="key-action-row">
              <span class="key-action-label">Token: </span>
              <div class="key-action-buttons">
                <button id="tokenInstructionsBtn" class="common-btn-outlined btn-sm"
                  onclick="loadKeysInstructionsModal()">
                  <i class="bi bi-info-circle"></i> Instructions
                </button>
              </div>
            </div>
          </div>
          {{/let}}
          {{/in}}
          <div id="keyGenerationErrorContainer" class="mt-2 text-danger"
            style="display: none; font-size: 0.75rem; word-wrap: break-word;"></div>
          {{/each}}
        </div>

        <hr class="my-3">

        <div class="sdk-generation-section mb-4 ms-3">
          <h5 class="oauth2-title mb-2">SDK</h5>
          <div class="d-flex align-items-center">
            <button id="generateSDKBtn" class="common-btn-primary btn-sm" 
                    onclick="redirectToSDKGeneration()" disabled>
              <span class="button-normal-state">
                <i class="bi bi-box-seam me-1"></i> Generate SDK
              </span>
            </button>
            <div class="tooltip-container ms-2">
              <i class="bi bi-info-circle"></i>
              <span class="tooltip-text">Select at least 2 APIs to generate SDK</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <form id="inlineEditForm" data-application-id="{{applicationMetadata.id}}" style="display: none;"></form>
</section>