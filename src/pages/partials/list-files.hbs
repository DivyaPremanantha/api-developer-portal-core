<section>
    <div class="card mb-4">
        <div class="card-header">
            Uploaded Views
        </div>
        <div class="card-body">
            <ul id="uploadedFilesList" class="list-group">
                <div class="idp-item d-flex justify-content-between align-items-center">
                    {{#views}}
                    <div>
                        <h6>{{name}}</h6>
                    </div>
                    <div>
                        <button class="btn btn-sm btn-outline-primary me-2 edit-file">
                            <i class="bi bi-pencil"></i> Edit
                        </button>
                        <form action="/idp/delete/{{idp.name}}" method="POST" class="d-inline">
                            <button type="submit" class="btn btn-sm btn-outline-danger"
                                onclick="return confirm('Are you sure you want to delete this IDP?');">
                                <i class="bi bi-trash"></i> Delete
                            </button>
                        </form>
                    </div>
                    {{/views}}
                    </div>
            </ul>
        </div>
        <div class="modal fade" id="editFileModal" tabindex="-1" aria-labelledby="editFileModalLabel"
            aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editFileModalLabel">Update organization content</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" id="editFileId" name="fileId">
                        <form id="editForm" enctype="multipart/form-data">
                            {{!-- <input type="hidden" class="form-control" name="redirect" value="true"> --}}
                            <div class="mb-3">
                                <label for="editZipFile" class="form-label">Upload New Zip File</label>
                                <input type="file" class="form-control" id="editZipFile" name="file" accept=".zip"
                                    required>
                                {{!-- <input type="file" id="editZipFile" name="file" accept=".zip" class="hidden"
                                    required> --}}
                                <input type="hidden" class="form-control" id="redirect" value="true">
                                <input type="hidden" id="orgId" name="orgId" value={{orgID}}>
                            </div>
                            <button type="submit" class="btn btn-primary">Update File</button>
                        </form>
                        {{!-- <form id="uploadForm" action='/devportal/organizations/{{orgID}}/layout' method="POST"
                            enctype="multipart/form-data">
                            <input type="hidden" id="editFileId" name="fileId">
                            <div class="upload-area" id="uploadArea">
                                <p>Drag & Drop your zip file here or click to select</p>
                                <input type="file" id="file" name="file" accept=".zip" class="hidden">
                                <input type="hidden" class="form-control" name="redirect" value="true">
                            </div>
                            <div id="fileName" class="mt-2"></div>
                            <button type="submit" class="btn btn-primary">Upload</button>
                        </form> --}}
                    </div>

                </div>
            </div>
        </div>
    </div>

    {{!-- <script>
        document.addEventListener('DOMContentLoaded', function () {

            const uploadForm = document.getElementById('editForm');
            const editFileModal = new bootstrap.Modal(document.getElementById('editFileModal'));

            // Edit file functionality
            document.querySelectorAll('.edit-file').forEach(button => {
                console.log('Inside event listenr')
                button.addEventListener('click', function () {
                    const fileId = this.getAttribute('data-file-id');
                    document.getElementById('editFileId').value = fileId;
                    editFileModal.show();
                });

            });

            uploadForm.addEventListener('submit', async (e) => {

                console.log('Inside submit')
                const zipFile = document.getElementById('editZipFile');
                const redirect = document.getElementById('redirect');
                e.preventDefault(); // Prevent default form submission

                if (!zipFile.files[0]) {
                    alert('Please select a ZIP file to upload.');
                    return;
                }

                const formData = new FormData();
                formData.append('file', zipFile.files[0]);
                formData.append('redirect', redirect.value);

                try {
                    console.log('Inside update request')
                    const response = await fetch('/devportal/organizations/{{orgID}}/layout', {
                        method: 'PUT', // Specify PUT method
                        body: formData,
                        // Note: Do not set 'Content-Type' to 'multipart/form-data' manually.
                        // The browser will set it including the correct boundary.
                        credentials: 'same-origin' // Include cookies if needed
                    });

                    if (response.ok) {
                        const result = await response.json();
                        alert(`Upload successful! Organization ID: ${result.orgId}, File Name: ${result.fileName}`);
                        // Optionally, redirect or update the UI
                        //window.location.href = `/${result.orgId}/configure`;
                    } else {
                        const error = await response.text();
                        alert(`Upload failed: ${error}`);
                    }
                } catch (error) {
                    console.error('Error uploading file:', error);
                    alert('An unexpected error occurred while uploading the file.');
                }
            });
        });
    </script> --}}
</section>