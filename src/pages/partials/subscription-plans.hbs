<section id="subscriptionPlans">
    <div class="container-fluid howwork-content" name="HowItWorks">
        <div class="col-lg-12 dev-header">
            <h2>Available Subscription Plans</h2>
        </div>
        <div class="row card-section">
            {{#each subscriptionPlans}}
            <div class="col-lg-4">
                <div class="card dev-card custom-api-card">
                    <div class="card-body">
                        <h5 class="work-apicard-title">{{name}}</h5>
                        <p> Tier plan: {{tierPlan}} </p>
                        <p> {{description}}</p>
                        <button type="button" class="btn apilistbtn-primary"
                            onclick="showPlanDetails('{{name}}', '{{tierPlan}}', '{{description}}', '{{json ../applications}}', '{{apiId}}')">Subscribe</button>
                    </div>
                </div>
            </div>
            {{/each}}
        </div>
    </div>
    <div id="planModal" class="custom-api-card modal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div id="modal-content">
                    <div class="modal-header">
                        <h5 class="dev-header h5" id="modalTitle">Subscription Plan Details</h5>
                    </div>
                    <div class="modal-body">
                        <h6 class="dev-header h6">Subcription Plan: <span id="planName"></h6>
                        {{#if applications}}
                        <div id="form-group">
                            <label class="items-label" for="applicationSelect">Select an Application</label>
                            <select id="applicationSelect" class="form-control items-label">
                                {{#each applications}}
                                <option value="{{id}}">{{name}}</option>
                                {{/each}}
                            </select>
                        </div>
                        {{else}}
                        <p>No applications available. Please create a new application.</p>
                        <button class="btn apilistbtn-primary" onclick="showApplicationForm()">Create
                            Application</button>`
                        {{/if}}
                    </div>

                    <div id="applicationFormSection" class="app-selection">
                        <div class="modal-header">
                            <h5 class="dev-header h5">Create a New Application</h5>
                        </div>
                        <div class="modal-body">
                            <div>
                                <h6 for="newAppName" class="dev-header h6">Application Name</h6>
                                <input type="text" id="appName" class="form-control input-content"
                                    placeholder="Enter application name">

                                <h6 for="throttlingPolicies" class="dev-header h6">Shared Quota for Application
                                    Tokens</h6>
                                <select id="throttlingPolicies" class="form-control ">
                                    {{#each appThrottlingPolicies}}
                                    <option value="{{name}}">{{name}}</option>
                                    {{/each}}
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn apilistbtn-secondary" data-dismiss="modal"
                        onclick="closeModal()">Close</button>
                    {{#if applications}}
                    <button type="button" class="btn apilistbtn-primary" id="subButton"
                        onclick="handleSubscribe()">Subscribe</button>
                    {{else}}
                    <button type="button" class="btn apilistbtn-primary" id="createSubButton"
                        onclick="handleCreateSubscribe()" {{#if devMode}}disabled{{/if}}>Create & Subscribe</button>
                    {{/if}}
                </div>
            </div>
        </div>
    </div>
</section>
<script>
    let apiId;
    let subPlan;

    function showPlanDetails(name, tierPlan, description, applications, selectedApiId) {
        apiId = selectedApiId;
        subPlan = name;
        let subscribedPlan = name;
        document.getElementById('planName').textContent = name;

        const modal = document.getElementById('planModal');
        modal.style.display = 'block';

        if (JSON.parse(applications).length === 0) {
            const createSubButton = document.getElementById('createSubButton');
            createSubButton.style.display = 'none';
        }
    }

    function closeModal() {
        const modal = document.getElementById('planModal');
        modal.style.display = 'none';

        const appSelection = document.getElementById('applicationFormSection');
        appSelection.style.display = 'none';

        const appInput = document.getElementById('appName');
        appInput.value = '';

        const throttlingTier = document.getElementById('throttlingPolicies');
        throttlingTier.selectedIndex  = 0;

    }

    window.onclick = function (event) {
        const modal = document.getElementById('planModal');
        if (event.target === modal) {
            const modal = document.getElementById('applicationFormSection');
            modal.style.display = 'none';

            const appInput = document.getElementById('appName');
            appInput.value = '';

            const throttlingTier = document.getElementById('throttlingPolicies');
            throttlingTier.selectedIndex  = 0;
            closeModal();
        }
    };

    // Function to show the application creation form
    function showApplicationForm() {
        const modal = document.getElementById('applicationFormSection');
        modal.style.display = 'block';

        const subButton = document.getElementById('createSubButton');
        subButton.style.display = 'block';
    }

    // Function to handle application creation
    async function handleCreateSubscribe() {
        try {
            const response = await fetch(`/devportal/application`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify
                    ({
                        name: document.getElementById('appName').value,
                        throttlingPolicy: document.getElementById('throttlingPolicies').value,
                    }),
            });

            const responseData = await response.json();

            if (response.ok) {
                handleSubscribe(responseData.applicationId);
            } else {
                console.error('Failed to create application:', responseData);
                alert(`Failed to create application. Please try again.\n${responseData.description}`);
            }
        } catch (error) {
            console.error('Error:', error);
            alert(`An error occurred while subscribing: \n${error.message}`);
        }
    }

    async function handleSubscribe(appId) {

        const applicationId = appId || document.getElementById('applicationSelect').value;

        if (!applicationId) {
            alert('Please select an application.');
            return;
        }

        try {
            const response = await fetch(`/devportal/subscriptions`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    applicationId: applicationId,
                    apiId: apiId,
                    throttlingPolicy: subPlan,
                }),
            });

            const responseData = await response.json();

            if (response.ok) {
                alert('Subscribed successfully!');
                location.reload(); // Reload the page to reflect changes
            } else {
                console.error('Failed to subscribe:', responseData);
                alert(`Failed to subscribe. Please try again.\n${responseData.description}`);
            }
        } catch (error) {
            console.error('Error:', error);
            alert(`An error occurred while subscribing: \n${error.message}`);
        }
    }
</script>